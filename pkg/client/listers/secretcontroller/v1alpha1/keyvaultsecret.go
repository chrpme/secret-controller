// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/twendt/secret-controller/pkg/apis/secretcontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KeyvaultSecretLister helps list KeyvaultSecrets.
type KeyvaultSecretLister interface {
	// List lists all KeyvaultSecrets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KeyvaultSecret, err error)
	// KeyvaultSecrets returns an object that can list and get KeyvaultSecrets.
	KeyvaultSecrets(namespace string) KeyvaultSecretNamespaceLister
	KeyvaultSecretListerExpansion
}

// keyvaultSecretLister implements the KeyvaultSecretLister interface.
type keyvaultSecretLister struct {
	indexer cache.Indexer
}

// NewKeyvaultSecretLister returns a new KeyvaultSecretLister.
func NewKeyvaultSecretLister(indexer cache.Indexer) KeyvaultSecretLister {
	return &keyvaultSecretLister{indexer: indexer}
}

// List lists all KeyvaultSecrets in the indexer.
func (s *keyvaultSecretLister) List(selector labels.Selector) (ret []*v1alpha1.KeyvaultSecret, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeyvaultSecret))
	})
	return ret, err
}

// KeyvaultSecrets returns an object that can list and get KeyvaultSecrets.
func (s *keyvaultSecretLister) KeyvaultSecrets(namespace string) KeyvaultSecretNamespaceLister {
	return keyvaultSecretNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KeyvaultSecretNamespaceLister helps list and get KeyvaultSecrets.
type KeyvaultSecretNamespaceLister interface {
	// List lists all KeyvaultSecrets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KeyvaultSecret, err error)
	// Get retrieves the KeyvaultSecret from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KeyvaultSecret, error)
	KeyvaultSecretNamespaceListerExpansion
}

// keyvaultSecretNamespaceLister implements the KeyvaultSecretNamespaceLister
// interface.
type keyvaultSecretNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KeyvaultSecrets in the indexer for a given namespace.
func (s keyvaultSecretNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KeyvaultSecret, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KeyvaultSecret))
	})
	return ret, err
}

// Get retrieves the KeyvaultSecret from the indexer for a given namespace and name.
func (s keyvaultSecretNamespaceLister) Get(name string) (*v1alpha1.KeyvaultSecret, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("keyvaultsecret"), name)
	}
	return obj.(*v1alpha1.KeyvaultSecret), nil
}
